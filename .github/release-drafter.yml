# https://johanneskonings.dev/github/2021/02/28/github_automatic_releases_and-changelog/
# https://tiagomichaelsousa.dev/articles/stop-writing-your-changelogs-manually

# This release drafter follows the conventions
# from https://keepachangelog.com

# https://github.com/release-drafter/release-drafter/issues/551
# https://github.com/release-drafter/release-drafter/pull/1013
# https://github.com/release-drafter/release-drafter/issues/139
# https://github.com/atk4/data/blob/develop/.github/release-drafter.yml
name-template: 'v$RESOLVED_VERSION'
tag-template: 'v$RESOLVED_VERSION'
template: |
  ## What Changed 👀
  $CHANGES
  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION
categories:
- title: 🚀 Features
  labels:
  - feature
- title: ♻️ Enhancement
  labels:
  - enhancement
  - refactor
- title: 🐛 Bug Fixes
  labels:
  - fix
  - bug
- title: 👷 CI
  labels:
  - ci
- title: ⚠️ Breaking Changes
  labels:
  - breaking-changes
- title: ⛔️ Deprecated
  labels:
  - deprecated
- title: 🗑 Removed
  labels:
  - removed
- title: 🔐 Security
  labels:
  - security
- title: 🧪 Test
  labels:
  - test
- title: 📄 Documentation
  labels:
  - docs
  - documentation
- title: 🧩 Dependency Updates
  labels:
  - deps
  - dependencies
- title: 🧰 Maintenance
  label: 'chore'
- title: 🧺 Miscellaneous #Everything except ABAP
  label: misc
- title: 🚩 Other changes
  ## putting no labels pr to `Other Changes` category with no label - https://github.com/release-drafter/release-drafter/issues/139#issuecomment-480473934


# https://www.trywilco.com/post/wilco-ci-cd-github-heroku
# https://github.com/release-drafter/release-drafter#autolabeler
# https://github.com/fuxingloh/multi-labeler

# Using regex for defining rules - https://regexr.com/
# https://stackoverflow.com/questions/58899999/regexp-to-match-conventional-commit-syntax
# Auto-labeler: Assign labels based on branch names or PR titles that follow Conventional Commits
autolabeler:
- label: 'feature'
  branch:
  - '/feat\/.+/' # Matches branch names starting with feat/
  title:
  - '/feat\: .+/' # Matches PR titles starting with feat:
- label: 'bugfix'
  branch:
  - '/fix\/.+/' # Matches branch names starting with fix/
  title:
  - '/fix\: .+/' # Matches PR titles starting with fix:
- label: 'documentation'
  branch:
  - '/docs\/.+/' # Matches branch names starting with docs/
  title:
  - '/docs\: .+/' # Matches PR titles starting with docs:
- label: 'style'
  branch:
  - '/style\/.+/' # Matches branch names starting with style/
  title:
  - '/style\: .+/' # Matches PR titles starting with style:
- label: 'refactor'
  branch:
  - '/refactor\/.+/' # Matches branch names starting with refactor/
  title:
  - '/refactor\: .+/' # Matches PR titles starting with refactor:
- label: 'test'
  branch:
  - '/test\/.+/' # Matches branch names starting with test/
  title:
  - '/test\: .+/' # Matches PR titles starting with test:
- label: 'chore'
  branch:
  - '/chore\/.+/' # Matches branch names starting with chore/
  title:
  - '/chore\: .+/' # Matches PR titles starting with chore:
- label: 'performance'
  branch:
  - '/perf\/.+/' # Matches branch names starting with perf/
  title:
  - '/perf\: .+/' # Matches PR titles starting with perf:
- label: 'ci'
  branch:
  - '/ci\/.+/' # Matches branch names starting with ci/
  title:
  - '/ci\: .+/' # Matches PR titles starting with ci:
- label: 'build'
  branch:
  - '/build\/.+/' # Matches branch names starting with build/
  title:
  - '/build\: .+/' # Matches PR titles starting with build:
- label: 'revert'
  branch:
  - '/revert\/.+/' # Matches branch names starting with revert/
  title:
  - '/revert\: .+/' # Matches PR titles starting with revert:

change-template: '- $TITLE @$AUTHOR (#$NUMBER)'
change-title-escapes: '\<*_&' # You can add # and @ to disable mentions, and add ` to disable code blocks.
version-resolver:
  major:
    labels:
    - breaking-changes
  minor:
    labels:
    - minor
  patch:
    labels:
    - patch
  default: patch

exclude-labels:
- skip-changelog
